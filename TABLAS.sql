-- ================================================
-- TABLA: TA_USUARIO
-- ================================================
CREATE TABLE ADJSS.TA_USUARIO (
    ID_TA_USUARIO VARCHAR2(36 CHAR) NOT NULL,
    EMAIL VARCHAR2(255 CHAR) NOT NULL,
    CONTRASENA_HASH VARCHAR2(255 CHAR) NOT NULL,
    ID_CAT_ESTADO_GLOBAL NUMBER(10),
    NOMBRE VARCHAR2(50 CHAR),
    A_MATERNO VARCHAR2(50 CHAR),
    A_PATERNO VARCHAR2(50 CHAR),
    TELEFONO NUMBER(10),
    KEY_FOTO_PERFIL VARCHAR2(255 CHAR),
    URL_FOTO_PERFIL VARCHAR2(255 CHAR),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),
    -- RESTRICCIONES
    CONSTRAINT PK_TA_USUARIO PRIMARY KEY (ID_TA_USUARIO),
    CONSTRAINT UQ_TA_USUARIO_EMAIL UNIQUE (EMAIL),
    CONSTRAINT FK_TA_USUARIO_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL) 
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ================================================
-- COMENTARIOS DESCRIPTIVOS
-- ================================================
COMMENT ON TABLE ADJSS.TA_USUARIO IS 'Tabla maestra de usuarios del sistema';
COMMENT ON COLUMN ADJSS.TA_USUARIO.ID_TA_USUARIO IS 'Identificador único del usuario (UUID)';
COMMENT ON COLUMN ADJSS.TA_USUARIO.EMAIL IS 'Dirección de correo electrónico única del usuario';
COMMENT ON COLUMN ADJSS.TA_USUARIO.CONTRASENA_HASH IS 'Hash seguro de la contraseña del usuario';
COMMENT ON COLUMN ADJSS.TA_USUARIO.ID_CAT_ESTADO_GLOBAL IS 'Estado actual del usuario (Activo/Inactivo)';
COMMENT ON COLUMN ADJSS.TA_USUARIO.NOMBRE IS 'Nombre(s) del usuario';
COMMENT ON COLUMN ADJSS.TA_USUARIO.A_MATERNO IS 'Apellido materno del usuario';
COMMENT ON COLUMN ADJSS.TA_USUARIO.A_PATERNO IS 'Apellido paterno del usuario';
COMMENT ON COLUMN ADJSS.TA_USUARIO.TELEFONO IS 'Número de teléfono (10 dígitos)';
COMMENT ON COLUMN ADJSS.TA_USUARIO.KEY_FOTO_PERFIL IS 'Clave de identificación en AWS S3 para la foto de perfil';
COMMENT ON COLUMN ADJSS.TA_USUARIO.URL_FOTO_PERFIL IS 'URL temporal de acceso a la foto de perfil';
COMMENT ON COLUMN ADJSS.TA_USUARIO.FE_CREACION IS '[AUDITORÍA] Fecha de creación del registro';
COMMENT ON COLUMN ADJSS.TA_USUARIO.CREADO_POR IS '[AUDITORÍA] Usuario que creó el registro';
COMMENT ON COLUMN ADJSS.TA_USUARIO.FE_ULTIMA_MODIFICACION IS '[AUDITORÍA] Fecha de última modificación';
COMMENT ON COLUMN ADJSS.TA_USUARIO.MODIFICADO_POR IS '[AUDITORÍA] Usuario que realizó la última modificación';

-- ================================================
-- TRIGGER PARA AUDITORÍA
-- ================================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_USUARIO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_USUARIO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    -- Obtener usuario actual (aplicación o BD)
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);
    
    IF INSERTING THEN
        -- Establecer campos de creación
        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        
        -- Generar UUID si no viene especificado
        IF :NEW.ID_TA_USUARIO IS NULL THEN
            :NEW.ID_TA_USUARIO := SYS_GUID();
        END IF;
        
    ELSIF UPDATING THEN
        -- Actualizar solo campos de modificación
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        
        -- Proteger campos de creación
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- ================================================
-- ÍNDICE ADICIONAL PARA BÚSQUEDAS POR TELÉFONO
-- ================================================
CREATE INDEX ADJSS.IDX_TA_USUARIO_TELEFONO ON ADJSS.TA_USUARIO(TELEFONO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- ================================================
-- SINÓNIMO PÚBLICO
-- ================================================
CREATE PUBLIC SYNONYM TA_USUARIO FOR ADJSS.TA_USUARIO;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_CURSO en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_CURSO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_CURSO
CREATE TABLE ADJSS.TA_CURSO (
    ID_TA_CURSO NUMBER(10) NOT NULL,
    INSTRUCTOR_ID NUMBER(10), -- FK futura hacia tabla de usuarios/instructores
    ID_TA_EMPRESA NUMBER(10), -- FK futura hacia tabla de empresas
    TITULO VARCHAR2(255 CHAR) NOT NULL,
    SLUG VARCHAR2(255 CHAR),
    ID_CAT_ESTADO_GLOBAL NUMBER(10), -- FK futura hacia catálogo de estado global
    ES_PUBLICO NUMBER(1) DEFAULT 0,
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE ÚNICO PARA SLUG (puede usarse en URLs)
CREATE UNIQUE INDEX ADJSS.IDX_TA_CURSO_SLUG
ON ADJSS.TA_CURSO (SLUG)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- RESTRICCIÓN UNIQUE PARA SLUG
ALTER TABLE ADJSS.TA_CURSO
ADD CONSTRAINT UQ_TA_CURSO_SLUG
UNIQUE (SLUG)
USING INDEX ADJSS.IDX_TA_CURSO_SLUG;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_CURSO IS 'TABLA PRINCIPAL DE CURSOS';
COMMENT ON COLUMN ADJSS.TA_CURSO.ID_TA_CURSO IS 'IDENTIFICADOR ÚNICO DEL CURSO';
COMMENT ON COLUMN ADJSS.TA_CURSO.INSTRUCTOR_ID IS 'REFERENCIA AL INSTRUCTOR RESPONSABLE DEL CURSO';
COMMENT ON COLUMN ADJSS.TA_CURSO.ID_TA_EMPRESA IS 'REFERENCIA A LA EMPRESA QUE PUBLICA EL CURSO';
COMMENT ON COLUMN ADJSS.TA_CURSO.TITULO IS 'TÍTULO DEL CURSO';
COMMENT ON COLUMN ADJSS.TA_CURSO.SLUG IS 'VALOR ÚNICO PARA URL AMIGABLE DEL CURSO';
COMMENT ON COLUMN ADJSS.TA_CURSO.ID_CAT_ESTADO_GLOBAL IS 'REFERENCIA AL ESTADO GLOBAL (CATÁLOGO)';
COMMENT ON COLUMN ADJSS.TA_CURSO.ES_PUBLICO IS 'INDICA SI EL CURSO ES PÚBLICO (1) O PRIVADO (0)';
COMMENT ON COLUMN ADJSS.TA_CURSO.FE_CREACION IS 'FECHA DE CREACIÓN AUTOMÁTICA';
COMMENT ON COLUMN ADJSS.TA_CURSO.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_CURSO.FE_ULTIMA_MODIFICACION IS 'ÚLTIMA FECHA DE MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_CURSO.MODIFICADO_POR IS 'USUARIO QUE MODIFICÓ EL REGISTRO POR ÚLTIMA VEZ';

-- CONSTRAINTS (comentadas para crear después)
ALTER TABLE ADJSS.TA_CURSO ADD CONSTRAINT FK_TA_CURSO_INSTRUCTOR FOREIGN KEY (INSTRUCTOR_ID) REFERENCES ADJSS.TA_USUARIO(ID_USUARIO);
ALTER TABLE ADJSS.TA_CURSO ADD CONSTRAINT FK_TA_CURSO_EMPRESA FOREIGN KEY (ID_TA_EMPRESA) REFERENCES ADJSS.TA_EMPRESA(ID_TA_EMPRESA);
ALTER TABLE ADJSS.TA_CURSO ADD CONSTRAINT FK_TA_CURSO_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL) REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL);

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_CURSO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_CURSO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);
    
    IF INSERTING THEN
        IF :NEW.ID_TA_CURSO IS NULL THEN
            :NEW.ID_TA_CURSO := ADJSS.SEQ_TA_CURSO_ID.NEXTVAL;
        END IF;
        
        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREAR SINÓNIMO PÚBLICO PARA TA_CURSO (solo si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_CURSO';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_CURSO FOR ADJSS.TA_CURSO';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_METADATO_CURSO en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_METADATO_CURSO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_METADATO_CURSO
CREATE TABLE ADJSS.TA_METADATO_CURSO (
    ID_TA_METADATO_CURSO NUMBER(10) NOT NULL,
    ID_TA_CURSO NUMBER(10) NOT NULL,
    TOTAL_MODULOS NUMBER,
    TOTAL_LECCIONES NUMBER,
    TOTAL_MINUTOS NUMBER,
    CALIFICACION_PROMEDIO NUMBER(3,1),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_METADATO_CURSO PRIMARY KEY (ID_TA_METADATO_CURSO),
    CONSTRAINT UQ_TA_METADATO_CURSO_ID_CURSO UNIQUE (ID_TA_CURSO),
    CONSTRAINT FK_TA_METADATO_CURSO_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE ÚNICO PARA ID_TA_CURSO (relación 1:1 con TA_CURSO)
CREATE UNIQUE INDEX ADJSS.IDX_TA_METADATO_CURSO_UNICO
ON ADJSS.TA_METADATO_CURSO (ID_TA_CURSO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_METADATO_CURSO IS 'METADATOS ASOCIADOS A UN CURSO (MODULOS, LECCIONES, TIEMPO, CALIFICACIÓN)';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.ID_TA_METADATO_CURSO IS 'IDENTIFICADOR ÚNICO DEL METADATO';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.ID_TA_CURSO IS 'REFERENCIA AL CURSO AL QUE PERTENECE';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.TOTAL_MODULOS IS 'NÚMERO TOTAL DE MÓDULOS';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.TOTAL_LECCIONES IS 'NÚMERO TOTAL DE LECCIONES';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.TOTAL_MINUTOS IS 'DURACIÓN TOTAL DEL CURSO EN MINUTOS';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.CALIFICACION_PROMEDIO IS 'CALIFICACIÓN PROMEDIO DEL CURSO';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_METADATO_CURSO.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_METADATO_CURSO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_METADATO_CURSO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_METADATO_CURSO IS NULL THEN
            :NEW.ID_TA_METADATO_CURSO := ADJSS.SEQ_TA_METADATO_CURSO_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREACIÓN DE SINÓNIMO PÚBLICO (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_METADATO_CURSO';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_METADATO_CURSO FOR ADJSS.TA_METADATO_CURSO';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_MODULO en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_MODULO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_MODULO
CREATE TABLE ADJSS.TA_MODULO (
    ID_TA_MODULO NUMBER(10) NOT NULL,
    ID_TA_CURSO NUMBER(10) NOT NULL,
    TITULO VARCHAR2(255 CHAR) NOT NULL,
    DESCRIPCION VARCHAR2(500 CHAR),
    ORDEN NUMBER,
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_MODULO PRIMARY KEY (ID_TA_MODULO),
    CONSTRAINT FK_TA_MODULO_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE PARA BÚSQUEDA RÁPIDA POR CURSO Y ORDEN
CREATE INDEX ADJSS.IDX_TA_MODULO_CURSO_ORDEN
ON ADJSS.TA_MODULO (ID_TA_CURSO, ORDEN)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_MODULO IS 'MÓDULOS QUE COMPONEN UN CURSO';
COMMENT ON COLUMN ADJSS.TA_MODULO.ID_TA_MODULO IS 'IDENTIFICADOR ÚNICO DEL MÓDULO';
COMMENT ON COLUMN ADJSS.TA_MODULO.ID_TA_CURSO IS 'REFERENCIA AL CURSO AL QUE PERTENECE (FK a TA_CURSO)';
COMMENT ON COLUMN ADJSS.TA_MODULO.TITULO IS 'TÍTULO DEL MÓDULO';
COMMENT ON COLUMN ADJSS.TA_MODULO.DESCRIPCION IS 'DESCRIPCIÓN DEL MÓDULO';
COMMENT ON COLUMN ADJSS.TA_MODULO.ORDEN IS 'ORDEN SECUENCIAL DEL MÓDULO EN EL CURSO';
COMMENT ON COLUMN ADJSS.TA_MODULO.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_MODULO.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_MODULO.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_MODULO.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_MODULO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_MODULO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);
    
    IF INSERTING THEN
        IF :NEW.ID_TA_MODULO IS NULL THEN
            :NEW.ID_TA_MODULO := ADJSS.SEQ_TA_MODULO_ID.NEXTVAL;
        END IF;
        
        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREAR SINÓNIMO PÚBLICO PARA TA_MODULO (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_MODULO';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_MODULO FOR ADJSS.TA_MODULO';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_LECCION en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_LECCION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_LECCION
CREATE TABLE ADJSS.TA_LECCION (
    ID_TA_LECCION NUMBER(10) NOT NULL,
    ID_TA_MODULO NUMBER(10) NOT NULL,
    TITULO VARCHAR2(255 CHAR) NOT NULL,
    DESCRIPCION VARCHAR2(500 CHAR),
    ID_CAT_TIPO_CONTENIDO VARCHAR2(16 CHAR),
    DURACION_MINUTOS NUMBER,
    ES_VISTA_PREVIA CHAR(1) CHECK (ES_VISTA_PREVIA IN ('0', '1')),
    ORDEN NUMBER,
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_LECCION PRIMARY KEY (ID_TA_LECCION),
    CONSTRAINT FK_TA_LECCION_MODULO FOREIGN KEY (ID_TA_MODULO)
        REFERENCES ADJSS.TA_MODULO(ID_TA_MODULO),
    CONSTRAINT FK_TA_LECCION_TIPO_CONTENIDO FOREIGN KEY (ID_CAT_TIPO_CONTENIDO)
        REFERENCES ADJSS.CAT_TIPO_CONTENIDO(ID_CAT_TIPO_CONTENIDO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE PARA BÚSQUEDA RÁPIDA POR MÓDULO Y ORDEN
CREATE INDEX ADJSS.IDX_TA_LECCION_MODULO_ORDEN
ON ADJSS.TA_LECCION (ID_TA_MODULO, ORDEN)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_LECCION IS 'LECCIONES ASOCIADAS A UN MÓDULO DEL CURSO';
COMMENT ON COLUMN ADJSS.TA_LECCION.ID_TA_LECCION IS 'IDENTIFICADOR ÚNICO DE LA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_LECCION.ID_TA_MODULO IS 'REFERENCIA AL MÓDULO AL QUE PERTENECE LA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_LECCION.TITULO IS 'TÍTULO DE LA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_LECCION.DESCRIPCION IS 'DESCRIPCIÓN DE LA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_LECCION.ID_CAT_TIPO_CONTENIDO IS 'TIPO DE CONTENIDO DE LA LECCIÓN (VIDEO, PDF, ETC)';
COMMENT ON COLUMN ADJSS.TA_LECCION.DURACION_MINUTOS IS 'DURACIÓN DE LA LECCIÓN EN MINUTOS';
COMMENT ON COLUMN ADJSS.TA_LECCION.ES_VISTA_PREVIA IS 'INDICA SI LA LECCIÓN ESTÁ DISPONIBLE COMO VISTA PREVIA (0:NO, 1:SÍ)';
COMMENT ON COLUMN ADJSS.TA_LECCION.ORDEN IS 'ORDEN SECUENCIAL DE LA LECCIÓN EN EL MÓDULO';
COMMENT ON COLUMN ADJSS.TA_LECCION.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_LECCION.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_LECCION.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_LECCION.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_LECCION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_LECCION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_LECCION IS NULL THEN
            :NEW.ID_TA_LECCION := ADJSS.SEQ_TA_LECCION_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREAR SINÓNIMO PÚBLICO PARA TA_LECCION (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_LECCION';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_LECCION FOR ADJSS.TA_LECCION';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_TAREA_ACTIVIDAD en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_TAREA_ACTIVIDAD_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_TAREA_ACTIVIDAD
CREATE TABLE ADJSS.TA_TAREA_ACTIVIDAD (
    ID_TA_TAREA_ACTIVIDAD NUMBER(10) NOT NULL,
    ID_TA_LECCION NUMBER(10) NOT NULL,
    TITULO VARCHAR2(16 CHAR),
    KEY_RECURSO VARCHAR2(255 CHAR),
    URL_RECURSO VARCHAR2(255 CHAR),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_TAREA_ACTIVIDAD PRIMARY KEY (ID_TA_TAREA_ACTIVIDAD),
    CONSTRAINT FK_TA_TAREA_ACTIVIDAD_LECCION FOREIGN KEY (ID_TA_LECCION)
        REFERENCES ADJSS.TA_LECCION(ID_TA_LECCION)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE PARA búsqueda rápida por lección
CREATE INDEX ADJSS.IDX_TA_TAREA_ACTIVIDAD_LECCION
ON ADJSS.TA_TAREA_ACTIVIDAD (ID_TA_LECCION)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_TAREA_ACTIVIDAD IS 'TAREAS O ACTIVIDADES ASOCIADAS A UNA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.ID_TA_TAREA_ACTIVIDAD IS 'IDENTIFICADOR ÚNICO DE LA TAREA O ACTIVIDAD';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.ID_TA_LECCION IS 'REFERENCIA A LA LECCIÓN ASOCIADA';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.TITULO IS 'TÍTULO BREVE DE LA ACTIVIDAD (MÁXIMO 16 CARACTERES)';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.KEY_RECURSO IS 'CLAVE DEL RECURSO ALMACENADO EN AWS (S3)';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.URL_RECURSO IS 'URL COMPLETA PARA ACCEDER AL RECURSO EN AWS';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_TAREA_ACTIVIDAD.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_TAREA_ACTIVIDAD_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_TAREA_ACTIVIDAD
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_TAREA_ACTIVIDAD IS NULL THEN
            :NEW.ID_TA_TAREA_ACTIVIDAD := ADJSS.SEQ_TA_TAREA_ACTIVIDAD_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREAR SINÓNIMO PÚBLICO PARA TA_TAREA_ACTIVIDAD (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_TAREA_ACTIVIDAD';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_TAREA_ACTIVIDAD FOR ADJSS.TA_TAREA_ACTIVIDAD';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_RECURSO_LECCION en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_RECURSO_LECCION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_RECURSO_LECCION
CREATE TABLE ADJSS.TA_RECURSO_LECCION (
    ID_TA_RECURSO_LECCION NUMBER(10) NOT NULL,
    ID_TA_LECCION NUMBER(10) NOT NULL,
    ID_CAT_TIPO_RECURSO NUMBER(10) NOT NULL,
    KEY_RECURSO VARCHAR2(255 CHAR),
    URL_RECURSO VARCHAR2(255 CHAR),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_RECURSO_LECCION PRIMARY KEY (ID_TA_RECURSO_LECCION),
    CONSTRAINT FK_TA_RECURSO_LECCION_LECCION FOREIGN KEY (ID_TA_LECCION)
        REFERENCES ADJSS.TA_LECCION(ID_TA_LECCION),
    CONSTRAINT FK_TA_RECURSO_LECCION_TIPO_RECURSO FOREIGN KEY (ID_CAT_TIPO_RECURSO)
        REFERENCES ADJSS.CAT_TIPO_RECURSO(ID_CAT_TIPO_RECURSO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE PARA búsquedas por lección y tipo de recurso
CREATE INDEX ADJSS.IDX_TA_RECURSO_LECCION
ON ADJSS.TA_RECURSO_LECCION (ID_TA_LECCION, ID_CAT_TIPO_RECURSO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_RECURSO_LECCION IS 'RECURSOS (PDF, VIDEO, ETC.) ASOCIADOS A UNA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.ID_TA_RECURSO_LECCION IS 'IDENTIFICADOR ÚNICO DEL RECURSO DE LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.ID_TA_LECCION IS 'REFERENCIA A LA LECCIÓN ASOCIADA';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.ID_CAT_TIPO_RECURSO IS 'TIPO DE RECURSO (CATÁLOGO)';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.KEY_RECURSO IS 'CLAVE EN AWS (S3) DEL RECURSO';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.URL_RECURSO IS 'URL PARA ACCESO AL RECURSO EN AWS';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_RECURSO_LECCION.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_RECURSO_LECCION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_RECURSO_LECCION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_RECURSO_LECCION IS NULL THEN
            :NEW.ID_TA_RECURSO_LECCION := ADJSS.SEQ_TA_RECURSO_LECCION_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREAR SINÓNIMO PÚBLICO PARA TA_RECURSO_LECCION (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_RECURSO_LECCION';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_RECURSO_LECCION FOR ADJSS.TA_RECURSO_LECCION';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_ENTREGA_TAREA en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_ENTREGA_TAREA_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_ENTREGA_TAREA
CREATE TABLE ADJSS.TA_ENTREGA_TAREA (
    ID_TA_ENTREGA_TAREA NUMBER(10) NOT NULL,
    ID_TA_LECCION NUMBER(10) NOT NULL,
    ID_CAT_TIPO_RECURSO NUMBER(10) NOT NULL,
    KEY_RECURSO VARCHAR2(255 CHAR),
    URL_RECURSO VARCHAR2(255 CHAR),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_ENTREGA_TAREA PRIMARY KEY (ID_TA_ENTREGA_TAREA),
    CONSTRAINT FK_TA_ENTREGA_TAREA_LECCION FOREIGN KEY (ID_TA_LECCION)
        REFERENCES ADJSS.TA_LECCION(ID_TA_LECCION),
    CONSTRAINT FK_TA_ENTREGA_TAREA_TIPO_RECURSO FOREIGN KEY (ID_CAT_TIPO_RECURSO)
        REFERENCES ADJSS.CAT_TIPO_RECURSO(ID_CAT_TIPO_RECURSO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE para mejorar búsquedas por lección y tipo de recurso
CREATE INDEX ADJSS.IDX_TA_ENTREGA_TAREA
ON ADJSS.TA_ENTREGA_TAREA (ID_TA_LECCION, ID_CAT_TIPO_RECURSO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_ENTREGA_TAREA IS 'ENTREGAS DE TAREA REALIZADAS POR LOS USUARIOS ASOCIADAS A UNA LECCIÓN';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.ID_TA_ENTREGA_TAREA IS 'IDENTIFICADOR ÚNICO DE LA ENTREGA DE TAREA';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.ID_TA_LECCION IS 'REFERENCIA A LA LECCIÓN ASOCIADA';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.ID_CAT_TIPO_RECURSO IS 'TIPO DE RECURSO ENTREGADO (CATÁLOGO)';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.KEY_RECURSO IS 'CLAVE EN AWS (S3) DEL RECURSO ENTREGADO';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.URL_RECURSO IS 'URL PARA ACCESO AL RECURSO ENTREGADO EN AWS';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_ENTREGA_TAREA.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_ENTREGA_TAREA_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_ENTREGA_TAREA
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_ENTREGA_TAREA IS NULL THEN
            :NEW.ID_TA_ENTREGA_TAREA := ADJSS.SEQ_TA_ENTREGA_TAREA_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREACIÓN DEL SINÓNIMO PÚBLICO (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_ENTREGA_TAREA';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_ENTREGA_TAREA FOR ADJSS.TA_ENTREGA_TAREA';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_EMPRESA en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_EMPRESA_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_EMPRESA
CREATE TABLE ADJSS.TA_EMPRESA (
    ID_TA_EMPRESA NUMBER(10) NOT NULL,
    NOMBRE VARCHAR2(255 CHAR) NOT NULL,
    DOMINIO VARCHAR2(255 CHAR) NOT NULL,
    ID_CAT_ESTADO_GLOBAL NUMBER(10),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_EMPRESA PRIMARY KEY (ID_TA_EMPRESA),
    CONSTRAINT UQ_TA_EMPRESA_DOMINIO UNIQUE (DOMINIO),
    CONSTRAINT FK_TA_EMPRESA_ESTADO_GLOBAL FOREIGN KEY (ID_CAT_ESTADO_GLOBAL)
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE ÚNICO PARA EL DOMINIO
CREATE UNIQUE INDEX ADJSS.IDX_TA_EMPRESA_DOMINIO
ON ADJSS.TA_EMPRESA (DOMINIO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_EMPRESA IS 'EMPRESAS DADAS DE ALTA EN LA PLATAFORMA (MULTITENANT)';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.ID_TA_EMPRESA IS 'IDENTIFICADOR ÚNICO DE LA EMPRESA';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.NOMBRE IS 'NOMBRE COMERCIAL DE LA EMPRESA';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.DOMINIO IS 'DOMINIO DE CORREO DE LA EMPRESA PARA ASOCIAR USUARIOS AUTOMÁTICAMENTE';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.ID_CAT_ESTADO_GLOBAL IS 'ESTADO GLOBAL DE LA EMPRESA (ACTIVO, INACTIVO, ETC)';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_EMPRESA.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_EMPRESA_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_EMPRESA
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_EMPRESA IS NULL THEN
            :NEW.ID_TA_EMPRESA := ADJSS.SEQ_TA_EMPRESA_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREACIÓN DEL SINÓNIMO PÚBLICO (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_EMPRESA';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_EMPRESA FOR ADJSS.TA_EMPRESA';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_PERMISO_ROL en esquema ADJSS
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_PERMISO_ROL_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_PERMISO_ROL
CREATE TABLE ADJSS.TA_PERMISO_ROL (
    ID_TA_PERMISO_ROL NUMBER(10) NOT NULL,
    ID_CAT_ROL NUMBER(10) NOT NULL,
    ID_CAT_PERMISO NUMBER(10) NOT NULL,
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_PERMISO_ROL PRIMARY KEY (ID_TA_PERMISO_ROL),
    CONSTRAINT UQ_TA_PERMISO_ROL_ROL_PERMISO UNIQUE (ID_CAT_ROL, ID_CAT_PERMISO),
    CONSTRAINT FK_TA_PERMISO_ROL_ROL FOREIGN KEY (ID_CAT_ROL)
        REFERENCES ADJSS.CAT_ROL(ID_CAT_ROL),
    CONSTRAINT FK_TA_PERMISO_ROL_PERMISO FOREIGN KEY (ID_CAT_PERMISO)
        REFERENCES ADJSS.CAT_PERMISO(ID_CAT_PERMISO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE COMPUESTO ÚNICO PARA EVITAR DUPLICIDAD
CREATE UNIQUE INDEX ADJSS.IDX_TA_PERMISO_ROL_COMP
ON ADJSS.TA_PERMISO_ROL (ID_CAT_ROL, ID_CAT_PERMISO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_PERMISO_ROL IS 'RELACIÓN DE PERMISOS ASIGNADOS A CADA ROL EN EL SISTEMA';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.ID_TA_PERMISO_ROL IS 'IDENTIFICADOR ÚNICO DE LA RELACIÓN PERMISO-ROL';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.ID_CAT_ROL IS 'REFERENCIA AL ROL';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.ID_CAT_PERMISO IS 'REFERENCIA AL PERMISO';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_PERMISO_ROL.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_PERMISO_ROL_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_PERMISO_ROL
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_PERMISO_ROL IS NULL THEN
            :NEW.ID_TA_PERMISO_ROL := ADJSS.SEQ_TA_PERMISO_ROL_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREACIÓN DEL SINÓNIMO PÚBLICO (si no existe)
DECLARE
    v_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM ALL_OBJECTS
    WHERE OBJECT_TYPE = 'SYNONYM'
      AND OWNER = 'PUBLIC'
      AND OBJECT_NAME = 'TA_PERMISO_ROL';

    IF v_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE PUBLIC SYNONYM TA_PERMISO_ROL FOR ADJSS.TA_PERMISO_ROL';
    END IF;
END;
/

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

--========================================
-- TA_ROL_USUARIO
--========================================

-- SECUENCIA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_ROL_USUARIO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_ROL_USUARIO
CREATE TABLE ADJSS.TA_ROL_USUARIO (
    ID_TA_ROL_USUARIO NUMBER(10) NOT NULL,
    ID_TA_USUARIO VARCHAR2(36 CHAR) NOT NULL,
    ID_CAT_ROL NUMBER(10) NOT NULL,
    ID_TA_EMPRESA NUMBER(10) NOT NULL,
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_ROL_USUARIO PRIMARY KEY (ID_TA_ROL_USUARIO),
    CONSTRAINT UQ_TA_ROL_USUARIO_UNICO UNIQUE (ID_TA_USUARIO, ID_CAT_ROL, ID_TA_EMPRESA),
    CONSTRAINT FK_TA_ROL_USUARIO_USUARIO FOREIGN KEY (ID_TA_USUARIO)
        REFERENCES ADJSS.TA_USUARIO(ID_TA_USUARIO),
    CONSTRAINT FK_TA_ROL_USUARIO_ROL FOREIGN KEY (ID_CAT_ROL)
        REFERENCES ADJSS.CAT_ROL(ID_CAT_ROL),
    CONSTRAINT FK_TA_ROL_USUARIO_EMPRESA FOREIGN KEY (ID_TA_EMPRESA)
        REFERENCES ADJSS.TA_EMPRESA(ID_TA_EMPRESA)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICES para mejorar búsquedas por FK
CREATE INDEX ADJSS.IDX_TA_ROL_USUARIO_USUARIO ON ADJSS.TA_ROL_USUARIO (ID_TA_USUARIO) TABLESPACE APP_MOMEMTUM_DATA01_IDX NOLOGGING;
CREATE INDEX ADJSS.IDX_TA_ROL_USUARIO_ROL ON ADJSS.TA_ROL_USUARIO (ID_CAT_ROL) TABLESPACE APP_MOMEMTUM_DATA01_IDX NOLOGGING;
CREATE INDEX ADJSS.IDX_TA_ROL_USUARIO_EMPRESA ON ADJSS.TA_ROL_USUARIO (ID_TA_EMPRESA) TABLESPACE APP_MOMEMTUM_DATA01_IDX NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_ROL_USUARIO IS 'ASIGNACIÓN DE ROLES A USUARIOS EN UNA EMPRESA';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.ID_TA_ROL_USUARIO IS 'IDENTIFICADOR ÚNICO DE LA RELACIÓN USUARIO-ROL';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.ID_TA_USUARIO IS 'USUARIO AL QUE SE ASIGNA EL ROL';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.ID_CAT_ROL IS 'ROL ASIGNADO AL USUARIO';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.ID_TA_EMPRESA IS 'EMPRESA A LA QUE PERTENECE EL USUARIO';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.FE_CREACION IS 'FECHA DE CREACIÓN DEL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.CREADO_POR IS 'USUARIO QUE CREÓ EL REGISTRO';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.FE_ULTIMA_MODIFICACION IS 'FECHA DE ÚLTIMA MODIFICACIÓN';
COMMENT ON COLUMN ADJSS.TA_ROL_USUARIO.MODIFICADO_POR IS 'USUARIO QUE REALIZÓ LA ÚLTIMA MODIFICACIÓN';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_ROL_USUARIO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_ROL_USUARIO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_ROL_USUARIO IS NULL THEN
            :NEW.ID_TA_ROL_USUARIO := ADJSS.SEQ_TA_ROL_USUARIO_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- CREACIÓN DE SINÓNIMO PÚBLICO
CREATE OR REPLACE PUBLIC SYNONYM TA_ROL_USUARIO FOR ADJSS.TA_ROL_USUARIO;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- SECUENCIA PARA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_INSCRIPCION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA: TA_INSCRIPCION
CREATE TABLE ADJSS.TA_INSCRIPCION (
    ID_TA_INSCRIPCION NUMBER(10) NOT NULL,
    ID_TA_USUARIO VARCHAR2(36 CHAR) NOT NULL,
    ID_TA_CURSO NUMBER(10) NOT NULL,
    FECHA_INSCRIPCION DATE NOT NULL,
    PORCENTAJE_COMPLETADO NUMBER(3) DEFAULT 0 CHECK (PORCENTAJE_COMPLETADO BETWEEN 0 AND 100),
    ID_CAT_ESTADO_GLOBAL NUMBER(10),
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    CONSTRAINT PK_TA_INSCRIPCION PRIMARY KEY (ID_TA_INSCRIPCION),
    CONSTRAINT UQ_TA_INSCRIPCION_UNICA UNIQUE (ID_TA_USUARIO, ID_TA_CURSO),
    CONSTRAINT FK_TA_INSCRIPCION_USUARIO FOREIGN KEY (ID_TA_USUARIO)
        REFERENCES ADJSS.TA_USUARIO(ID_TA_USUARIO),
    CONSTRAINT FK_TA_INSCRIPCION_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO),
    CONSTRAINT FK_TA_INSCRIPCION_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL)
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE COMPUESTO PARA LA CLAVE ÚNICA
CREATE UNIQUE INDEX ADJSS.IDX_TA_INSCRIPCION_UNICA
ON ADJSS.TA_INSCRIPCION (ID_TA_USUARIO, ID_TA_CURSO)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_INSCRIPCION IS 'Registra la inscripción de un usuario a un curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.ID_TA_INSCRIPCION IS 'Identificador único de la inscripción.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.ID_TA_USUARIO IS 'Usuario inscrito al curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.ID_TA_CURSO IS 'Curso al que se ha inscrito el usuario.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.FECHA_INSCRIPCION IS 'Fecha en la que el usuario se inscribió al curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.PORCENTAJE_COMPLETADO IS 'Avance porcentual del curso por parte del usuario (0-100).';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.ID_CAT_ESTADO_GLOBAL IS 'Estado de la inscripción (activo, cancelado, etc).';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- TRIGGER DE AUDITORÍA
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_INSCRIPCION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_INSCRIPCION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_INSCRIPCION IS NULL THEN
            :NEW.ID_TA_INSCRIPCION := ADJSS.SEQ_TA_INSCRIPCION_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- SINÓNIMO PÚBLICO
CREATE OR REPLACE PUBLIC SYNONYM TA_INSCRIPCION FOR ADJSS.TA_INSCRIPCION;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- SECUENCIA PARA ID AUTOINCREMENTAL
CREATE SEQUENCE ADJSS.SEQ_TA_PROGRESO_LECCION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- TABLA
CREATE TABLE ADJSS.TA_PROGRESO_LECCION (
    ID_TA_PROGRESO_LECCION NUMBER(10) NOT NULL,
    ID_TA_INSCRIPCION NUMBER(10) NOT NULL,
    ID_TA_LECCION NUMBER(10) NOT NULL,
    COMPLETADO NUMBER(1) DEFAULT 0 CHECK (COMPLETADO IN (0,1)),
    ULTIMA_VISTA_EN TIMESTAMP,
    COMPLETADO_EN TIMESTAMP,
    FE_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_PROGRESO_LECCION PRIMARY KEY (ID_TA_PROGRESO_LECCION),
    CONSTRAINT UQ_TA_PROGRESO_LECCION_UNICO UNIQUE (ID_TA_INSCRIPCION, ID_TA_LECCION),
    CONSTRAINT FK_TA_PROGRESO_INSCRIPCION FOREIGN KEY (ID_TA_INSCRIPCION)
        REFERENCES ADJSS.TA_INSCRIPCION(ID_TA_INSCRIPCION),
    CONSTRAINT FK_TA_PROGRESO_LECCION FOREIGN KEY (ID_TA_LECCION)
        REFERENCES ADJSS.TA_LECCION(ID_TA_LECCION)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ÍNDICE PARA LA CLAVE ÚNICA
CREATE UNIQUE INDEX ADJSS.IDX_TA_PROGRESO_LECCION_UNICO
ON ADJSS.TA_PROGRESO_LECCION (ID_TA_INSCRIPCION, ID_TA_LECCION)
TABLESPACE APP_MOMEMTUM_DATA01_IDX
NOLOGGING;

-- COMENTARIOS
COMMENT ON TABLE ADJSS.TA_PROGRESO_LECCION IS 'Registra el progreso de un usuario en una lección específica.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.ID_TA_PROGRESO_LECCION IS 'Identificador único del progreso de la lección.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.ID_TA_INSCRIPCION IS 'Identificador de la inscripción del usuario al curso.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.ID_TA_LECCION IS 'Identificador de la lección.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.COMPLETADO IS 'Indica si el usuario completó la lección (1) o no (0).';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.ULTIMA_VISTA_EN IS 'Fecha y hora de la última vez que el usuario visualizó la lección.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.COMPLETADO_EN IS 'Fecha y hora en que el usuario completó la lección.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_PROGRESO_LECCION.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- TRIGGER ÚNICO DE AUDITORÍA Y AUTOINCREMENTO
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_PROGRESO_LECCION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_PROGRESO_LECCION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_PROGRESO_LECCION IS NULL THEN
            :NEW.ID_TA_PROGRESO_LECCION := ADJSS.SEQ_TA_PROGRESO_LECCION_ID.NEXTVAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- SINÓNIMO PÚBLICO
CREATE OR REPLACE PUBLIC SYNONYM TA_PROGRESO_LECCION FOR ADJSS.TA_PROGRESO_LECCION;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA PARA ID_TA_DETALLE_CURSO
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_DETALLE_CURSO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_DETALLE_CURSO
-- ========================================
CREATE TABLE ADJSS.TA_DETALLE_CURSO (
    ID_TA_DETALLE_CURSO      NUMBER(10) NOT NULL,
    ID_TA_CURSO              NUMBER(10) NOT NULL,
    ID_CAT_IDIOMA            NUMBER(10),
    ID_CAT_NIVEL             NUMBER(10),
    KEY_MINIATURA            VARCHAR2(255 CHAR),
    URL_MINIATURA            VARCHAR2(255 CHAR),
    KEY_VIDEO_PROMO          VARCHAR2(255 CHAR),
    URL_VIDEO_PROMO          VARCHAR2(255 CHAR),
    DESCRIPCION_CORTA        VARCHAR2(500 CHAR),
    DESCRIPCION              CLOB,
    FE_CREACION              TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR               VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR           VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_DETALLE_CURSO PRIMARY KEY (ID_TA_DETALLE_CURSO),
    CONSTRAINT FK_TA_DETALLE_CURSO_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO),
    CONSTRAINT FK_TA_DETALLE_CURSO_IDIOMA FOREIGN KEY (ID_CAT_IDIOMA)
        REFERENCES ADJSS.CAT_IDIOMA(ID_CAT_IDIOMA),
    CONSTRAINT FK_TA_DETALLE_CURSO_NIVEL FOREIGN KEY (ID_CAT_NIVEL)
        REFERENCES ADJSS.CAT_NIVEL(ID_CAT_NIVEL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOB (DESCRIPCION) STORE AS (
    TABLESPACE APP_MOMEMTUM_LOB01_DAT
)
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_DETALLE_CURSO IS 'Contiene la información descriptiva y multimedia adicional de los cursos.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.ID_TA_DETALLE_CURSO IS 'Identificador único del detalle del curso.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.ID_TA_CURSO IS 'Curso al que pertenece este detalle.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.ID_CAT_IDIOMA IS 'Idioma en el que se ofrece el curso.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.ID_CAT_NIVEL IS 'Nivel de dificultad del curso (básico, intermedio, avanzado).';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.KEY_MINIATURA IS 'Nombre del archivo o clave del recurso de la miniatura.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.URL_MINIATURA IS 'URL pública del recurso de miniatura.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.KEY_VIDEO_PROMO IS 'Clave del recurso para el video promocional.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.URL_VIDEO_PROMO IS 'URL del video promocional del curso.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.DESCRIPCION_CORTA IS 'Descripción breve del curso.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.DESCRIPCION IS 'Descripción detallada del contenido del curso.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_DETALLE_CURSO.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA Y AUTOINCREMENTO
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_DETALLE_CURSO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_DETALLE_CURSO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_DETALLE_CURSO IS NULL THEN
            SELECT ADJSS.SEQ_TA_DETALLE_CURSO_ID.NEXTVAL
            INTO :NEW.ID_TA_DETALLE_CURSO
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- ========================================
-- ÍNDICES RECOMENDADOS (TABLESPACE CORRECTO)
-- ========================================
CREATE INDEX ADJSS.IDX_TA_DETALLE_CURSO_CURSO
    ON ADJSS.TA_DETALLE_CURSO (ID_TA_CURSO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_TA_DETALLE_CURSO_IDIOMA
    ON ADJSS.TA_DETALLE_CURSO (ID_CAT_IDIOMA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_TA_DETALLE_CURSO_NIVEL
    ON ADJSS.TA_DETALLE_CURSO (ID_CAT_NIVEL)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_DETALLE_CURSO FOR ADJSS.TA_DETALLE_CURSO;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA PARA ID_TA_GRUPO_EMPRESA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_GRUPO_EMPRESA_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_GRUPO_EMPRESA
-- ========================================
CREATE TABLE ADJSS.TA_GRUPO_EMPRESA (
    ID_TA_GRUPO_EMPRESA      NUMBER(10) NOT NULL,
    ID_TA_EMPRESA            NUMBER(10) NOT NULL,
    NOMBRE                   VARCHAR2(100 CHAR) NOT NULL,
    DESCRIPCION              VARCHAR2(500 CHAR),
    FE_CREACION              TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR               VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR           VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_GRUPO_EMPRESA PRIMARY KEY (ID_TA_GRUPO_EMPRESA),
    CONSTRAINT FK_TA_GRUPO_EMPRESA_EMPRESA FOREIGN KEY (ID_TA_EMPRESA)
        REFERENCES ADJSS.TA_EMPRESA(ID_TA_EMPRESA)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_GRUPO_EMPRESA IS 'Contiene la información de los grupos o divisiones internas de una empresa.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.ID_TA_GRUPO_EMPRESA IS 'Identificador único del grupo de empresa.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.ID_TA_EMPRESA IS 'Empresa a la que pertenece este grupo.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.NOMBRE IS 'Nombre del grupo o división de la empresa.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.DESCRIPCION IS 'Descripción del propósito o función del grupo.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_GRUPO_EMPRESA.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA Y AUTOINCREMENTO
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_GRUPO_EMPRESA_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_GRUPO_EMPRESA
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_GRUPO_EMPRESA IS NULL THEN
            SELECT ADJSS.SEQ_TA_GRUPO_EMPRESA_ID.NEXTVAL
            INTO :NEW.ID_TA_GRUPO_EMPRESA
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- ========================================
-- ÍNDICES RECOMENDADOS
-- ========================================
CREATE INDEX ADJSS.IDX_TA_GRUPO_EMPRESA_EMPRESA
    ON ADJSS.TA_GRUPO_EMPRESA (ID_TA_EMPRESA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_TA_GRUPO_EMPRESA_NOMBRE
    ON ADJSS.TA_GRUPO_EMPRESA (NOMBRE)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_GRUPO_EMPRESA FOR ADJSS.TA_GRUPO_EMPRESA;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA PARA ID_TA_USUARIO_GRUPO
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_USUARIO_GRUPO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_USUARIO_GRUPO
-- ========================================
CREATE TABLE ADJSS.TA_USUARIO_GRUPO (
    ID_TA_USUARIO_GRUPO      NUMBER(10) NOT NULL,
    ID_TA_GRUPO_EMPRESA      NUMBER(10) NOT NULL,
    ID_TA_USUARIO            VARCHAR2(36 CHAR) NOT NULL,
    FE_CREACION              TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR               VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR           VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_USUARIO_GRUPO PRIMARY KEY (ID_TA_USUARIO_GRUPO),
    CONSTRAINT FK_TA_USUARIO_GRUPO_GRUPO FOREIGN KEY (ID_TA_GRUPO_EMPRESA)
        REFERENCES ADJSS.TA_GRUPO_EMPRESA(ID_TA_GRUPO_EMPRESA),
    CONSTRAINT FK_TA_USUARIO_GRUPO_USUARIO FOREIGN KEY (ID_TA_USUARIO)
        REFERENCES ADJSS.TA_USUARIO(ID_TA_USUARIO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_USUARIO_GRUPO IS 'Relación entre usuarios y grupos de empresa.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.ID_TA_USUARIO_GRUPO IS 'Identificador único de la relación usuario-grupo.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.ID_TA_GRUPO_EMPRESA IS 'Grupo de empresa al que pertenece el usuario.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.ID_TA_USUARIO IS 'Identificador del usuario que forma parte del grupo.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_USUARIO_GRUPO.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA Y AUTOINCREMENTO
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_USUARIO_GRUPO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_USUARIO_GRUPO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_USUARIO_GRUPO IS NULL THEN
            SELECT ADJSS.SEQ_TA_USUARIO_GRUPO_ID.NEXTVAL
            INTO :NEW.ID_TA_USUARIO_GRUPO
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- ========================================
-- ÍNDICES RECOMENDADOS
-- ========================================
CREATE INDEX ADJSS.IDX_TA_USUARIO_GRUPO_GRUPO
    ON ADJSS.TA_USUARIO_GRUPO (ID_TA_GRUPO_EMPRESA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_TA_USUARIO_GRUPO_USUARIO
    ON ADJSS.TA_USUARIO_GRUPO (ID_TA_USUARIO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_USUARIO_GRUPO FOR ADJSS.TA_USUARIO_GRUPO;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA PARA ID_TA_SESION_VIVO
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_SESION_VIVO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_SESION_VIVO
-- ========================================
CREATE TABLE ADJSS.TA_SESION_VIVO (
    ID_TA_SESION_VIVO         NUMBER(10) NOT NULL,
    ID_TA_CURSO               NUMBER(10) NOT NULL,
    TITULO                    VARCHAR2(255 CHAR) NOT NULL,
    HORA_INICIO               TIMESTAMP NOT NULL,
    HORA_FIN                  TIMESTAMP,
    ID_CAT_PLATAFORMA         NUMBER(10) NOT NULL,
    KEY_REUNION               VARCHAR2(255 CHAR),
    KEY_GRABACION             VARCHAR2(255 CHAR),
    ID_CAT_ESTADO_GLOBAL      NUMBER(10) NOT NULL,
    FE_CREACION               TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR            VARCHAR2(30 CHAR),

    CONSTRAINT PK_TA_SESION_VIVO PRIMARY KEY (ID_TA_SESION_VIVO),
    CONSTRAINT FK_TA_SESION_VIVO_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO),
    CONSTRAINT FK_TA_SESION_VIVO_PLATAFORMA FOREIGN KEY (ID_CAT_PLATAFORMA)
        REFERENCES ADJSS.CAT_PLATAFORMA(ID_CAT_PLATAFORMA),
    CONSTRAINT FK_TA_SESION_VIVO_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL)
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_SESION_VIVO IS 'Sesiones en vivo programadas dentro de un curso.';

COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.ID_TA_SESION_VIVO IS 'Identificador único de la sesión en vivo.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.ID_TA_CURSO IS 'Curso al cual pertenece la sesión.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.TITULO IS 'Título descriptivo de la sesión.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.HORA_INICIO IS 'Fecha y hora de inicio de la sesión.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.HORA_FIN IS 'Fecha y hora de finalización de la sesión.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.ID_CAT_PLATAFORMA IS 'Plataforma usada para la sesión en vivo (Zoom, Teams, etc).';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.KEY_REUNION IS 'Clave o identificador único de la reunión en la plataforma.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.KEY_GRABACION IS 'Clave o identificador de la grabación en la plataforma.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.ID_CAT_ESTADO_GLOBAL IS 'Estado actual de la sesión (programada, realizada, cancelada, etc).';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_SESION_VIVO.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA Y AUTOINCREMENTO
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_SESION_VIVO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_SESION_VIVO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_SESION_VIVO IS NULL THEN
            SELECT ADJSS.SEQ_TA_SESION_VIVO_ID.NEXTVAL
            INTO :NEW.ID_TA_SESION_VIVO
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
    END IF;
END;
/

-- ========================================
-- ÍNDICES RECOMENDADOS
-- ========================================
CREATE INDEX ADJSS.IDX_TA_SESION_VIVO_CURSO
    ON ADJSS.TA_SESION_VIVO (ID_TA_CURSO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_TA_SESION_VIVO_PLATAFORMA
    ON ADJSS.TA_SESION_VIVO (ID_CAT_PLATAFORMA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_TA_SESION_VIVO_ESTADO
    ON ADJSS.TA_SESION_VIVO (ID_CAT_ESTADO_GLOBAL)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_SESION_VIVO FOR ADJSS.TA_SESION_VIVO;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_EVALUACION_CURSO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_EVALUACION_CURSO
-- ========================================
CREATE TABLE ADJSS.TA_EVALUACION_CURSO (
    ID_TA_EVALUACION_CURSO     NUMBER(10) NOT NULL,
    ID_TA_CURSO                NUMBER(10) NOT NULL,
    ID_TA_MODULO               NUMBER(10) NOT NULL,
    TITULO                     VARCHAR2(40 CHAR) NOT NULL,
    ID_CAT_TIPO_PREGUNTA       NUMBER(10) NOT NULL,
    PUNTAJE_APROBATORIO        NUMBER,
    INTENTOS_MAXIMOS           NUMBER,
    ORDEN                      NUMBER,
    ID_CAT_ESTADO_GLOBAL       NUMBER(10),
    FE_CREACION                TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                 VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR             VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_EVALUACION_CURSO PRIMARY KEY (ID_TA_EVALUACION_CURSO),
    CONSTRAINT FK_EVAL_CURSO_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO),
    CONSTRAINT FK_EVAL_CURSO_MODULO FOREIGN KEY (ID_TA_MODULO)
        REFERENCES ADJSS.TA_MODULO(ID_TA_MODULO),
    CONSTRAINT FK_EVAL_CURSO_TIPO_PREG FOREIGN KEY (ID_CAT_TIPO_PREGUNTA)
        REFERENCES ADJSS.CAT_TIPO_PREGUNTA(ID_CAT_TIPO_PREGUNTA),
    CONSTRAINT FK_EVAL_CURSO_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL)
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_EVALUACION_CURSO IS 'Contiene las evaluaciones asociadas a un módulo dentro de un curso.';

COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.ID_TA_EVALUACION_CURSO IS 'Identificador único de la evaluación del curso.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.ID_TA_CURSO IS 'Identificador del curso al que pertenece la evaluación.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.ID_TA_MODULO IS 'Identificador del módulo dentro del curso.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.TITULO IS 'Título de la evaluación.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.ID_CAT_TIPO_PREGUNTA IS 'Tipo de preguntas que contiene la evaluación.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.PUNTAJE_APROBATORIO IS 'Puntaje mínimo necesario para aprobar la evaluación.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.INTENTOS_MAXIMOS IS 'Cantidad máxima de intentos permitidos para aprobar la evaluación.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.ORDEN IS 'Orden de aparición de la evaluación dentro del módulo.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.ID_CAT_ESTADO_GLOBAL IS 'Estado actual de la evaluación.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_EVALUACION_CURSO.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_EVALUACION_CURSO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_EVALUACION_CURSO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_EVALUACION_CURSO IS NULL THEN
            SELECT ADJSS.SEQ_TA_EVALUACION_CURSO_ID.NEXTVAL
            INTO :NEW.ID_TA_EVALUACION_CURSO
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_EVALUACION_CURSO := :OLD.ID_TA_EVALUACION_CURSO;
    END IF;
END;
/

-- ========================================
-- ÍNDICES RECOMENDADOS
-- ========================================
CREATE INDEX ADJSS.IDX_EVAL_CURSO_CURSO
    ON ADJSS.TA_EVALUACION_CURSO (ID_TA_CURSO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_EVAL_CURSO_MODULO
    ON ADJSS.TA_EVALUACION_CURSO (ID_TA_MODULO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_EVAL_CURSO_ESTADO
    ON ADJSS.TA_EVALUACION_CURSO (ID_CAT_ESTADO_GLOBAL)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_EVALUACION_CURSO FOR ADJSS.TA_EVALUACION_CURSO;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_CERTIFICACION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;
    
-- ========================================
-- TABLA: TA_CERTIFICACION
-- ========================================
CREATE TABLE ADJSS.TA_CERTIFICACION (
    ID_TA_CERTIFICACION           NUMBER(10) NOT NULL,
    ID_TA_INSCRIPCION             NUMBER(10) NOT NULL,
    ID_TA_CURSO                   NUMBER(10) NOT NULL,
    ID_TA_USUARIO                 VARCHAR2(36 CHAR) NOT NULL,
    ID_CAT_TIPO_CERTIFICACION     NUMBER(10) NOT NULL,
    CODIGO_UNICO                  VARCHAR2(50 CHAR) NOT NULL UNIQUE,
    FECHA_EMISION                 TIMESTAMP,
    FECHA_VENCIMIENTO             TIMESTAMP,
    KEY_CERTIFICADO               VARCHAR2(255 CHAR) NOT NULL,
    URL_CERTIFICADO               VARCHAR2(255 CHAR) NOT NULL,
    COMENTARIOS                   VARCHAR2(100 CHAR),
    ID_CAT_ESTADO_GLOBAL          NUMBER(10),
    FE_CREACION                   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                    VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_CERTIFICACION PRIMARY KEY (ID_TA_CERTIFICACION),
    CONSTRAINT FK_CERTIF_INSCRIPCION FOREIGN KEY (ID_TA_INSCRIPCION)
        REFERENCES ADJSS.TA_INSCRIPCION(ID_TA_INSCRIPCION),
    CONSTRAINT FK_CERTIF_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO),
    CONSTRAINT FK_CERTIF_USUARIO FOREIGN KEY (ID_TA_USUARIO)
        REFERENCES ADJSS.TA_USUARIO(ID_TA_USUARIO),
    CONSTRAINT FK_CERTIF_TIPO FOREIGN KEY (ID_CAT_TIPO_CERTIFICACION)
        REFERENCES ADJSS.CAT_TIPO_CERTIFICACION(ID_CAT_TIPO_CERTIFICACION),
    CONSTRAINT FK_CERTIF_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL)
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_CERTIFICACION IS 'Contiene la información de certificaciones emitidas a los usuarios.';

COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.ID_TA_CERTIFICACION IS 'Identificador único de la certificación.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.ID_TA_INSCRIPCION IS 'Identificador de la inscripción asociada.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.ID_TA_CURSO IS 'Curso asociado a la certificación.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.ID_TA_USUARIO IS 'Identificador del usuario certificado.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.ID_CAT_TIPO_CERTIFICACION IS 'Tipo de certificación otorgada.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.CODIGO_UNICO IS 'Código único de la certificación.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.FECHA_EMISION IS 'Fecha de emisión de la certificación.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.FECHA_VENCIMIENTO IS 'Fecha de vencimiento (si aplica).';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.KEY_CERTIFICADO IS 'Llave interna del certificado.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.URL_CERTIFICADO IS 'URL donde se puede consultar el certificado.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.COMENTARIOS IS 'Observaciones o anotaciones adicionales.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.ID_CAT_ESTADO_GLOBAL IS 'Estado global de la certificación.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.FE_ULTIMA_MODIFICACION IS 'Fecha de última modificación.';
COMMENT ON COLUMN ADJSS.TA_CERTIFICACION.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_CERTIFICACION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_CERTIFICACION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_CERTIFICACION IS NULL THEN
            SELECT ADJSS.SEQ_TA_CERTIFICACION_ID.NEXTVAL
            INTO :NEW.ID_TA_CERTIFICACION
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_CERTIFICACION := :OLD.ID_TA_CERTIFICACION;
    END IF;
END;
/


-- ========================================
-- ÍNDICES RECOMENDADOS
-- ========================================
CREATE INDEX ADJSS.IDX_CERTIFICACION_INSCRIPCION
    ON ADJSS.TA_CERTIFICACION (ID_TA_INSCRIPCION)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_CERTIFICACION_CURSO
    ON ADJSS.TA_CERTIFICACION (ID_TA_CURSO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_CERTIFICACION_USUARIO
    ON ADJSS.TA_CERTIFICACION (ID_TA_USUARIO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_CERTIFICACION FOR ADJSS.TA_CERTIFICACION;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_SUSCRIPCION_EMPRESA_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_SUSCRIPCION_EMPRESA
-- ========================================
CREATE TABLE ADJSS.TA_SUSCRIPCION_EMPRESA (
    ID_TA_SUSCRIPCION_EMPRESA     NUMBER(10) NOT NULL,
    ID_TA_EMPRESA                 NUMBER(10) NOT NULL,
    ID_CAT_TIPO_PLAN              NUMBER(10) NOT NULL,
    FECHA_INICIO                  DATE NOT NULL,
    FECHA_FIN                     DATE,
    LIMITE_USUARIOS               NUMBER,
    ID_CAT_ESTADO_GLOBAL          NUMBER(10),
    FE_CREACION                   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                    VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_SUSCRIPCION_EMPRESA PRIMARY KEY (ID_TA_SUSCRIPCION_EMPRESA),
    CONSTRAINT FK_SUSC_EMP_EMPRESA FOREIGN KEY (ID_TA_EMPRESA)
        REFERENCES ADJSS.TA_EMPRESA(ID_TA_EMPRESA),
    CONSTRAINT FK_SUSC_EMP_TIPO_PLAN FOREIGN KEY (ID_CAT_TIPO_PLAN)
        REFERENCES ADJSS.CAT_TIPO_PLAN(ID_CAT_TIPO_PLAN),
    CONSTRAINT FK_SUSC_EMP_ESTADO FOREIGN KEY (ID_CAT_ESTADO_GLOBAL)
        REFERENCES ADJSS.CAT_ESTADO_GLOBAL(ID_CAT_ESTADO_GLOBAL)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_SUSCRIPCION_EMPRESA IS 'Gestiona las suscripciones activas o pasadas de las empresas a los planes.';

COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.ID_TA_SUSCRIPCION_EMPRESA IS 'Identificador único de la suscripción de la empresa.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.ID_TA_EMPRESA IS 'Empresa que ha adquirido el plan.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.ID_CAT_TIPO_PLAN IS 'Tipo de plan adquirido por la empresa.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.FECHA_INICIO IS 'Fecha de inicio de la suscripción.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.FECHA_FIN IS 'Fecha de término de la suscripción (si aplica).';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.LIMITE_USUARIOS IS 'Cantidad máxima de usuarios permitidos en el plan.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.ID_CAT_ESTADO_GLOBAL IS 'Estado actual de la suscripción.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.FE_CREACION IS 'Fecha en que se creó el registro.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación.';
COMMENT ON COLUMN ADJSS.TA_SUSCRIPCION_EMPRESA.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_SUSCRIPCION_EMPRESA_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_SUSCRIPCION_EMPRESA
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_SUSCRIPCION_EMPRESA IS NULL THEN
            SELECT ADJSS.SEQ_TA_SUSCRIPCION_EMPRESA_ID.NEXTVAL
            INTO :NEW.ID_TA_SUSCRIPCION_EMPRESA
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_SUSCRIPCION_EMPRESA := :OLD.ID_TA_SUSCRIPCION_EMPRESA;
    END IF;
END;
/

-- ========================================
-- ÍNDICES SUGERIDOS
-- ========================================
CREATE INDEX ADJSS.IDX_SUSC_EMPRESA
    ON ADJSS.TA_SUSCRIPCION_EMPRESA (ID_TA_EMPRESA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_SUSC_TIPO_PLAN
    ON ADJSS.TA_SUSCRIPCION_EMPRESA (ID_CAT_TIPO_PLAN)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO (opcional)
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_SUSCRIPCION_EMPRESA FOR ADJSS.TA_SUSCRIPCION_EMPRESA;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_INSCRIPCION_EMPRESA_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_INSCRIPCION_EMPRESA
-- ========================================
CREATE TABLE ADJSS.TA_INSCRIPCION_EMPRESA (
    ID_TA_INSCRIPCION_EMPRESA     NUMBER(10) NOT NULL,
    ID_TA_EMPRESA                 NUMBER(10) NOT NULL,
    ID_TA_CURSO                   NUMBER(10) NOT NULL,
    ASIGNADO_POR                  VARCHAR2(16 CHAR),
    ASIGNADO_EN                   TIMESTAMP,
    FE_CREACION                   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                    VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_INSCRIPCION_EMPRESA PRIMARY KEY (ID_TA_INSCRIPCION_EMPRESA),
    CONSTRAINT FK_INS_EMP_EMPRESA FOREIGN KEY (ID_TA_EMPRESA)
        REFERENCES ADJSS.TA_EMPRESA(ID_TA_EMPRESA),
    CONSTRAINT FK_INS_EMP_CURSO FOREIGN KEY (ID_TA_CURSO)
        REFERENCES ADJSS.TA_CURSO(ID_TA_CURSO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_INSCRIPCION_EMPRESA IS 'Registra la inscripción de una empresa a un curso determinado.';

COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.ID_TA_INSCRIPCION_EMPRESA IS 'Identificador único de la inscripción empresa-curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.ID_TA_EMPRESA IS 'Empresa que se inscribe al curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.ID_TA_CURSO IS 'Curso asignado a la empresa.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.ASIGNADO_POR IS 'Usuario o sistema que asignó el curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.ASIGNADO_EN IS 'Fecha y hora de asignación del curso.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_INSCRIPCION_EMPRESA.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_INSCRIPCION_EMPRESA_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_INSCRIPCION_EMPRESA
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_INSCRIPCION_EMPRESA IS NULL THEN
            SELECT ADJSS.SEQ_TA_INSCRIPCION_EMPRESA_ID.NEXTVAL
            INTO :NEW.ID_TA_INSCRIPCION_EMPRESA
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_INSCRIPCION_EMPRESA := :OLD.ID_TA_INSCRIPCION_EMPRESA;
    END IF;
END;
/

-- ========================================
-- ÍNDICES SUGERIDOS
-- ========================================
CREATE INDEX ADJSS.IDX_INS_EMP_EMPRESA
    ON ADJSS.TA_INSCRIPCION_EMPRESA (ID_TA_EMPRESA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_INS_EMP_CURSO
    ON ADJSS.TA_INSCRIPCION_EMPRESA (ID_TA_CURSO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO (opcional)
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_INSCRIPCION_EMPRESA FOR ADJSS.TA_INSCRIPCION_EMPRESA;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_PREGUNTA_EVALUACION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_PREGUNTA_EVALUACION
-- ========================================
CREATE TABLE ADJSS.TA_PREGUNTA_EVALUACION (
    ID_TA_PREGUNTA_EVALUACION     NUMBER(10) NOT NULL,
    EVALUACION_ID                 NUMBER(10) NOT NULL,
    TEXTO_PREGUNTA                VARCHAR2(100 CHAR) NOT NULL,
    TIPO_PREGUNTA_ID              NUMBER(10) NOT NULL,
    FE_CREACION                   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                    VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_PREGUNTA_EVALUACION PRIMARY KEY (ID_TA_PREGUNTA_EVALUACION),
    CONSTRAINT FK_PREG_EVAL_EVALUACION FOREIGN KEY (EVALUACION_ID)
        REFERENCES ADJSS.TA_EVALUACION_CURSO(ID_TA_EVALUACION_CURSO),
    CONSTRAINT FK_PREG_EVAL_TIPO_PREG FOREIGN KEY (TIPO_PREGUNTA_ID)
        REFERENCES ADJSS.CAT_TIPO_PREGUNTA(ID_CAT_TIPO_PREGUNTA)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_PREGUNTA_EVALUACION IS 'Contiene las preguntas que componen una evaluación de curso.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.ID_TA_PREGUNTA_EVALUACION IS 'Identificador único de la pregunta.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.EVALUACION_ID IS 'Identificador de la evaluación a la que pertenece la pregunta.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.TEXTO_PREGUNTA IS 'Texto de la pregunta.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.TIPO_PREGUNTA_ID IS 'Tipo de pregunta (opción múltiple, verdadero/falso, etc.).';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_PREGUNTA_EVALUACION.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_PREGUNTA_EVALUACION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_PREGUNTA_EVALUACION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_PREGUNTA_EVALUACION IS NULL THEN
            SELECT ADJSS.SEQ_TA_PREGUNTA_EVALUACION_ID.NEXTVAL
            INTO :NEW.ID_TA_PREGUNTA_EVALUACION
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_PREGUNTA_EVALUACION := :OLD.ID_TA_PREGUNTA_EVALUACION;
    END IF;
END;
/

-- ========================================
-- ÍNDICES SUGERIDOS
-- ========================================
CREATE INDEX ADJSS.IDX_PREG_EVAL_EVALUACION
    ON ADJSS.TA_PREGUNTA_EVALUACION (EVALUACION_ID)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_PREG_EVAL_TIPO
    ON ADJSS.TA_PREGUNTA_EVALUACION (TIPO_PREGUNTA_ID)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO (opcional)
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_PREGUNTA_EVALUACION FOR ADJSS.TA_PREGUNTA_EVALUACION;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_OPCION_PREGUNTA_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_OPCION_PREGUNTA
-- ========================================
CREATE TABLE ADJSS.TA_OPCION_PREGUNTA (
    ID_TA_OPCION_PREGUNTA         NUMBER(10) NOT NULL,
    ID_TA_PREGUNTA_EVALUACION     NUMBER(10) NOT NULL,
    ES_CORRECTA                   CHAR(1) NOT NULL CHECK (ES_CORRECTA IN ('S', 'N')),
    TEXTO_OPCION                  VARCHAR2(255 CHAR) NOT NULL,
    ORDEN                         NUMBER,
    FE_CREACION                   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                    VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_OPCION_PREGUNTA PRIMARY KEY (ID_TA_OPCION_PREGUNTA),
    CONSTRAINT FK_OPCION_PREGUNTA_EVAL FOREIGN KEY (ID_TA_PREGUNTA_EVALUACION)
        REFERENCES ADJSS.TA_PREGUNTA_EVALUACION(ID_TA_PREGUNTA_EVALUACION)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_OPCION_PREGUNTA IS 'Opciones de respuesta disponibles para una pregunta de evaluación.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.ID_TA_OPCION_PREGUNTA IS 'Identificador único de la opción de pregunta.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.ID_TA_PREGUNTA_EVALUACION IS 'Identificador de la pregunta a la que pertenece la opción.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.ES_CORRECTA IS 'Indica si la opción es la correcta (S/N).';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.TEXTO_OPCION IS 'Texto visible de la opción.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.ORDEN IS 'Orden de aparición de la opción.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_OPCION_PREGUNTA.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_OPCION_PREGUNTA_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_OPCION_PREGUNTA
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_OPCION_PREGUNTA IS NULL THEN
            SELECT ADJSS.SEQ_TA_OPCION_PREGUNTA_ID.NEXTVAL
            INTO :NEW.ID_TA_OPCION_PREGUNTA
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_OPCION_PREGUNTA := :OLD.ID_TA_OPCION_PREGUNTA;
    END IF;
END;
/

-- ========================================
-- ÍNDICE SUGERIDO
-- ========================================
CREATE INDEX ADJSS.IDX_OPCION_PREGUNTA_EVAL
    ON ADJSS.TA_OPCION_PREGUNTA (ID_TA_PREGUNTA_EVALUACION)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO (opcional)
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_OPCION_PREGUNTA FOR ADJSS.TA_OPCION_PREGUNTA;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_RESULTADO_EVALUACION_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_RESULTADO_EVALUACION
-- ========================================
CREATE TABLE ADJSS.TA_RESULTADO_EVALUACION (
    ID_TA_RESULTADO_EVALUACION    NUMBER(10) NOT NULL,
    USUARIO_ID                    VARCHAR2(36 CHAR) NOT NULL,
    ID_TA_EVALUACION_CURSO        NUMBER(10) NOT NULL,
    PUNTAJE                       NUMBER,
    APROBADO                      CHAR(1) CHECK (APROBADO IN ('S', 'N')),
    COMPLETADO_EN                 TIMESTAMP,
    FE_CREACION                   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                    VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_RESULTADO_EVALUACION PRIMARY KEY (ID_TA_RESULTADO_EVALUACION),
    CONSTRAINT FK_RESULTADO_USUARIO FOREIGN KEY (USUARIO_ID)
        REFERENCES ADJSS.TA_USUARIO(ID_TA_USUARIO),
    CONSTRAINT FK_RESULTADO_EVALUACION FOREIGN KEY (ID_TA_EVALUACION_CURSO)
        REFERENCES ADJSS.TA_EVALUACION_CURSO(ID_TA_EVALUACION_CURSO)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_RESULTADO_EVALUACION IS 'Resultados obtenidos por los usuarios en las evaluaciones de los cursos.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.ID_TA_RESULTADO_EVALUACION IS 'Identificador único del resultado.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.USUARIO_ID IS 'Identificador del usuario que presentó la evaluación.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.ID_TA_EVALUACION_CURSO IS 'Evaluación a la que corresponde el resultado.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.PUNTAJE IS 'Puntaje obtenido por el usuario.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.APROBADO IS 'Indica si el usuario aprobó la evaluación (S/N).';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.COMPLETADO_EN IS 'Fecha y hora en que se completó la evaluación.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_RESULTADO_EVALUACION.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_RESULTADO_EVALUACION_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_RESULTADO_EVALUACION
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_RESULTADO_EVALUACION IS NULL THEN
            SELECT ADJSS.SEQ_TA_RESULTADO_EVALUACION_ID.NEXTVAL
            INTO :NEW.ID_TA_RESULTADO_EVALUACION
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_RESULTADO_EVALUACION := :OLD.ID_TA_RESULTADO_EVALUACION;
    END IF;
END;
/

-- ========================================
-- ÍNDICES SUGERIDOS
-- ========================================
CREATE INDEX ADJSS.IDX_RESULTADO_USUARIO
    ON ADJSS.TA_RESULTADO_EVALUACION (USUARIO_ID)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_RESULTADO_EVALUACION
    ON ADJSS.TA_RESULTADO_EVALUACION (ID_TA_EVALUACION_CURSO)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO PÚBLICO (opcional)
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_RESULTADO_EVALUACION FOR ADJSS.TA_RESULTADO_EVALUACION;

--====================================================================================================================================
--====================================================================================================================================
--====================================================================================================================================

-- ========================================
-- SECUENCIA
-- ========================================
CREATE SEQUENCE ADJSS.SEQ_TA_RESPUESTA_USUARIO_ID
    START WITH 10001
    INCREMENT BY 1
    MAXVALUE 9999999999
    MINVALUE 10001
    NOCYCLE
    NOCACHE
    ORDER;

-- ========================================
-- TABLA: TA_RESPUESTA_USUARIO
-- ========================================
CREATE TABLE ADJSS.TA_RESPUESTA_USUARIO (
    ID_TA_RESPUESTA_USUARIO        NUMBER(10) NOT NULL,
    ID_TA_RESULTADO_EVALUACION     NUMBER(10) NOT NULL,
    ID_TA_PREGUNTA_EVALUACION      NUMBER(10) NOT NULL,
    ID_TA_OPCION_PREGUNTA          NUMBER(10) NOT NULL,
    ES_CORRECTA_SELECCIONADA       CHAR(1) CHECK (ES_CORRECTA_SELECCIONADA IN ('S', 'N')),
    FE_RESPUESTA                   TIMESTAMP,
    FE_CREACION                    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREADO_POR                     VARCHAR2(30 CHAR),
    FE_ULTIMA_MODIFICACION         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MODIFICADO_POR                 VARCHAR2(30 CHAR),

    -- CONSTRAINTS
    CONSTRAINT PK_TA_RESPUESTA_USUARIO PRIMARY KEY (ID_TA_RESPUESTA_USUARIO),
    CONSTRAINT FK_RESPUESTA_RESULTADO FOREIGN KEY (ID_TA_RESULTADO_EVALUACION)
        REFERENCES ADJSS.TA_RESULTADO_EVALUACION(ID_TA_RESULTADO_EVALUACION),
    CONSTRAINT FK_RESPUESTA_PREGUNTA FOREIGN KEY (ID_TA_PREGUNTA_EVALUACION)
        REFERENCES ADJSS.TA_PREGUNTA_EVALUACION(ID_TA_PREGUNTA_EVALUACION),
    CONSTRAINT FK_RESPUESTA_OPCION FOREIGN KEY (ID_TA_OPCION_PREGUNTA)
        REFERENCES ADJSS.TA_OPCION_PREGUNTA(ID_TA_OPCION_PREGUNTA)
)
TABLESPACE APP_MOMEMTUM_DATA01_DAT
LOGGING;

-- ========================================
-- COMENTARIOS
-- ========================================
COMMENT ON TABLE ADJSS.TA_RESPUESTA_USUARIO IS 'Registro de respuestas seleccionadas por el usuario en una evaluación.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.ID_TA_RESPUESTA_USUARIO IS 'Identificador único de la respuesta del usuario.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.ID_TA_RESULTADO_EVALUACION IS 'Resultado de evaluación al que pertenece esta respuesta.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.ID_TA_PREGUNTA_EVALUACION IS 'Pregunta que fue respondida.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.ID_TA_OPCION_PREGUNTA IS 'Opción seleccionada por el usuario.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.ES_CORRECTA_SELECCIONADA IS 'Indica si la opción seleccionada era correcta (S/N).';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.FE_RESPUESTA IS 'Fecha y hora de la respuesta.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.FE_CREACION IS 'Fecha de creación del registro.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.CREADO_POR IS 'Usuario que creó el registro.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.FE_ULTIMA_MODIFICACION IS 'Fecha de la última modificación del registro.';
COMMENT ON COLUMN ADJSS.TA_RESPUESTA_USUARIO.MODIFICADO_POR IS 'Usuario que realizó la última modificación.';

-- ========================================
-- TRIGGER DE AUDITORÍA
-- ========================================
CREATE OR REPLACE TRIGGER ADJSS.TRG_TA_RESPUESTA_USUARIO_AUDIT
BEFORE INSERT OR UPDATE ON ADJSS.TA_RESPUESTA_USUARIO
FOR EACH ROW
DECLARE
    v_usuario VARCHAR2(30);
BEGIN
    v_usuario := NVL(SYS_CONTEXT('USERENV', 'CLIENT_IDENTIFIER'), USER);

    IF INSERTING THEN
        IF :NEW.ID_TA_RESPUESTA_USUARIO IS NULL THEN
            SELECT ADJSS.SEQ_TA_RESPUESTA_USUARIO_ID.NEXTVAL
            INTO :NEW.ID_TA_RESPUESTA_USUARIO
            FROM DUAL;
        END IF;

        :NEW.FE_CREACION := CURRENT_TIMESTAMP;
        :NEW.CREADO_POR := v_usuario;
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;

    ELSIF UPDATING THEN
        :NEW.FE_ULTIMA_MODIFICACION := CURRENT_TIMESTAMP;
        :NEW.MODIFICADO_POR := v_usuario;
        :NEW.FE_CREACION := :OLD.FE_CREACION;
        :NEW.CREADO_POR := :OLD.CREADO_POR;
        :NEW.ID_TA_RESPUESTA_USUARIO := :OLD.ID_TA_RESPUESTA_USUARIO;
    END IF;
END;
/

-- ========================================
-- ÍNDICES RECOMENDADOS
-- ========================================
CREATE INDEX ADJSS.IDX_RESPUESTA_RESULTADO
    ON ADJSS.TA_RESPUESTA_USUARIO (ID_TA_RESULTADO_EVALUACION)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_RESPUESTA_PREGUNTA
    ON ADJSS.TA_RESPUESTA_USUARIO (ID_TA_PREGUNTA_EVALUACION)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

CREATE INDEX ADJSS.IDX_RESPUESTA_OPCION
    ON ADJSS.TA_RESPUESTA_USUARIO (ID_TA_OPCION_PREGUNTA)
    TABLESPACE APP_MOMEMTUM_DATA01_IDX;

-- ========================================
-- SINÓNIMO (opcional)
-- ========================================
CREATE OR REPLACE PUBLIC SYNONYM TA_RESPUESTA_USUARIO FOR ADJSS.TA_RESPUESTA_USUARIO;